{
	"info": {
		"_postman_id": "6688b474-0c5c-4730-8c5e-71fcc24cf08e",
		"name": "Medoc Backend Postman Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33944925"
	},
	"item": [
		{
			"name": "UserBackend",
			"item": [
				{
					"name": "Get Notes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OTYzMzcwYjQyMmUwZjY4ODk2OTJlYSIsImlhdCI6MTczNzg5Njk2MCwiZXhwIjoxNzM3OTAwNTYwfQ.od3mLkKTUR6V9a4hApWukq8dgRpkIHmtkShRTviWzEI",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5000/notes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"notes"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"email\":\"sahilch12@gmail.com\",\n    \"password\":\"123456789\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"auth",
								"login"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "User Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Sahil\",\n    \"email\":\"sahilch112@gmail.com\",\n    \"password\":\"123456789\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"auth",
								"register"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Delete data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OTYzMzcwYjQyMmUwZjY4ODk2OTJlYSIsImlhdCI6MTczNzg5Njk2MCwiZXhwIjoxNzM3OTAwNTYwfQ.od3mLkKTUR6V9a4hApWukq8dgRpkIHmtkShRTviWzEI",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/notes/6796348eb422e0f6889692ee",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"notes",
								"6796348eb422e0f6889692ee"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "post notes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OTYzMzcwYjQyMmUwZjY4ODk2OTJlYSIsImlhdCI6MTczNzg5Njk2MCwiZXhwIjoxNzM3OTAwNTYwfQ.od3mLkKTUR6V9a4hApWukq8dgRpkIHmtkShRTviWzEI",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"My name is Sahil\",\n    \"description\":\"Hello i am from  CU\",\n    \"status\":\"Active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/notes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"notes"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update Notes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OTYzMzcwYjQyMmUwZjY4ODk2OTJlYSIsImlhdCI6MTczNzg5Njk2MCwiZXhwIjoxNzM3OTAwNTYwfQ.od3mLkKTUR6V9a4hApWukq8dgRpkIHmtkShRTviWzEI",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"status\": \"Archived\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/notes/6796348eb422e0f6889692ee",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"notes",
								"6796348eb422e0f6889692ee"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin Backend",
			"item": [
				{
					"name": "Admin Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Admin1\",\r\n    \"email\":\"Admin@example.com\",\r\n    \"password\":\"Admin123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5001/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"Admin@example.com\",\r\n    \"password\":\"Admin123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5001/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OTYzNmNiZDNlNzhmMTU0NDEyMjQ5NyIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTczNzg5NzcyMSwiZXhwIjoxNzM3OTAxMzIxfQ.AMoV2lZcmVNy7lQ7G2JI8zHaX8JPfAmUVJo289taX94",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5001/auth/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"auth",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Notes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OTYzNmNiZDNlNzhmMTU0NDEyMjQ5NyIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTczNzg5NzcyMSwiZXhwIjoxNzM3OTAxMzIxfQ.AMoV2lZcmVNy7lQ7G2JI8zHaX8JPfAmUVJo289taX94",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5001/auth/notes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"auth",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Audits Logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OTYzNmNiZDNlNzhmMTU0NDEyMjQ5NyIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTczNzg5NzcyMSwiZXhwIjoxNzM3OTAxMzIxfQ.AMoV2lZcmVNy7lQ7G2JI8zHaX8JPfAmUVJo289taX94",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5001/auth/logs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"auth",
								"logs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Specific User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OTYzNmNiZDNlNzhmMTU0NDEyMjQ5NyIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTczNzg5ODY5NiwiZXhwIjoxNzM3OTAyMjk2fQ.UTnAweTJq5Sh0uBR6PbOY2M8NUFrB_Rtt12PcRhddMg",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5001/auth/users/679639fb124e80bd7ff3360c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"auth",
								"users",
								"679639fb124e80bd7ff3360c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Specific User Copy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OTYzNmNiZDNlNzhmMTU0NDEyMjQ5NyIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTczNzg5ODY5NiwiZXhwIjoxNzM3OTAyMjk2fQ.UTnAweTJq5Sh0uBR6PbOY2M8NUFrB_Rtt12PcRhddMg",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5001/auth/users/679639fb124e80bd7ff3360c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"auth",
								"users",
								"679639fb124e80bd7ff3360c"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}